function loadPage(url, pageLoadClass, pagePreloadClass, callbackfunction) {
  httpRequest = new XMLHttpRequest();
  httpRequest.onreadystatechange = function(){
      if (httpRequest.readyState === 4) {
        if (httpRequest.status === 200) {
          const httpResponse = httpRequest.response;
          const childOfPageLoadClass = httpResponse.querySelector(pageLoadClass).firstElementChild;
          const elementPagePreload = document.querySelector(pagePreloadClass);
          contentOfChildOfPageLoadClass = childOfPageLoadClass.outerHTML;
          elementPagePreload.innerHTML = contentOfChildOfPageLoadClass;
          callbackfunction(url);
        }
      }
  };
  httpRequest.open('GET', url);
  httpRequest.responseType = "document";
  httpRequest.send();
}

function page_scroll(urlsArray) {
  var l = null;
  var indexIncrement = null;
  var indexDecrement = null;
  var state = false;
  setIndex();
  addEventListenersToScroll();

  function setIndex(IndexOfPageCurrent) {
    const currentOrPreviousPageName = window.location.pathname;
    const IndexOfPageCurrentOrPrevious = urlsArray.indexOf(currentOrPreviousPageName);
    "undefined" == typeof IndexOfPageCurrent && (IndexOfPageCurrent = IndexOfPageCurrentOrPrevious);
    indexIncrement = IndexOfPageCurrent + 1;
    indexDecrement = IndexOfPageCurrent - 1;
    0 > indexDecrement ? indexDecrement += urlsArray.length : indexIncrement >= urlsArray.length && (indexIncrement -= urlsArray.length);
  }

  function addEventListenersToScroll() {
    scroolOnClick("left");
    scroolOnClick("right");
  }

  function scroolOnClick(direction) {
    const elemenArrowButtons = document.querySelectorAll('.page-scroll-' + direction);
    elemenArrowButtons.forEach(function(button) {
    button.addEventListener('click', eventHandler);
      function eventHandler(evnt) {
        const elementBody = document.body;
	      elementBody.classList.add('posa');
        document.querySelector(".page-scroll-show .header").style.top = elementBody.scrollTop;
        if (!state) {
          state = true;
          var scrollToIndex = null;
          var cssScrollDirection = null;
	        const elementPageLoad = document.querySelector(".page-load");
          direction == "left" ? (scrollToIndex = indexDecrement, cssScrollDirection = "100%") : direction == "right" && (scrollToIndex = indexIncrement, cssScrollDirection = "-100%");
          elementPageLoad.classList.add("process");
          const createdElementPreload = document.createElement('div');
          createdElementPreload.classList.add('page-preload-' + direction);
          elementPageLoad.parentNode.insertBefore(createdElementPreload, elementPageLoad.nextSibling);
		      loadPage(urlsArray[scrollToIndex], ".page-load", '.page-preload-' + direction, function(url) {
            const elementPagePreloadWithDirection = document.querySelector('.page-preload-' + direction);
            setIndex(scrollToIndex);
            setTimeout(function() {
              elementPageLoad.style.left = cssScrollDirection;
		  	      elementPagePreloadWithDirection.style.left = 0;
            }, 500);
            setTimeout(function() {
            elementBody.classList.remove('posa');
            elementPageLoad.remove();
            elementPagePreloadWithDirection.classList.add("page-load");
            elementPagePreloadWithDirection.classList.remove('page-preload-' + direction)
            state = false
            }, 1e3);
            history.pushState(null, null, url);
            addEventListenersToScroll();
          })
        }
        evnt.preventDefault();
      }
    })
  }

  window.addEventListener("popstate", function() {
    loadPage(window.location.pathname, ".page-load", ".page-load", function() {
        setIndex();
        addEventListenersToScroll();
    })
  })
}

var getUrlParameter = function(e) {
	var n, t, a = decodeURIComponent(window.location.search.substring(1)),
		o = a.split("&");
	for (t = 0; t < o.length; t++)
		if (n = o[t].split("="), n[0] === e) return void 0 === n[1] ? !0 : n[1]
};

function contactBubbleAnimation() {
  const contactBubbleEl = document.querySelector('.contact-bubble');
  contactBubbleEl.addEventListener('mouseover', function(e) {
    if(e.target.nodeName === 'SPAN') {
      const childrenCollection = contactBubbleEl.children;
      for(var i = 0; i < childrenCollection.length; i+=1 ) {
        const currentChildren =  childrenCollection[i];
        if (currentChildren.className.includes('bubble')) {
          currentChildren.classList.remove('bounceIn');
          setTimeout(function() {
            currentChildren.classList.add('bounceIn');
          }, 10);
        }
      }
    }
  })
}

function formValidation(emailElement, emailElementError, messageElement, messageElementError, formElement) {
  const showErrors = function() {
    if(emailElement.validity.valueMissing) {
      emailElementError.textContent = 'Prosím, zadejte email';
    }  else if (emailElement.validity.typeMismatch) {
      emailElementError.textContent = 'Zadali jste špatně email';
    }
    if (messageElement.validity.valueMissing) {
      messageElementError.textContent = 'Prosím, zadejte text';
    }
    // Set the styling appropriately
    if (!emailElement.validity.valid) {
      emailElement.classList.add('error');
      emailElementError.classList.add('show');
    } else {
      messageElement.classList.add('error');
      messageElementError.classList.add('show');
    }
  }

  emailElement.addEventListener('input', function() {
    if(emailElement.validity.valid) {
      emailElementError.innerHTML = '';
      emailElement.classList.remove('error');
      emailElementError.classList.remove('show')
    } else {
      emailElement.classList.add('error');
      emailElementError.classList.add('show');
      showErrors();
    }
  });
  messageElement.addEventListener('input', function() {
    if(messageElement.validity.valid) {
      messageElementError.innerHTML = '';
      messageElement.classList.remove('error');
      messageElementError.classList.remove('show');
    }
    else {
      messageElement.classList.add('error');
      messageElementError.classList.add('show');
      showErrors();
    }
  });
  formElement.addEventListener('submit', function(evnt) {
  if (!emailElement.validity.valid || !messageElement.validity.valid) {
    showErrors();
    evnt.preventDefault();
    }
  });
}

document.addEventListener("DOMContentLoaded", function() {
  const bodyEl = document.querySelector("body");
  const menuEl = document.getElementById("menu");
  const munuOpenEl = document.getElementById("menu_open");

  if (location.pathname == '/index.html'){
    location.href = '/';
  }

  contactBubbleAnimation();

  const freeConsultationForm = document.getElementById("contact_form_kozultace_zdarma");

  if(freeConsultationForm) {
    const freeConsultationEmail = document.querySelector("#contact_form_kozultace_zdarma #email");
    const freeConsultationEmailError = document.querySelector("#contact_form_kozultace_zdarma #email + span.error");
    const freeConsultationMessage = document.querySelector("#contact_form_kozultace_zdarma #message");
    const freeConsultationMessageError = document.querySelector("#contact_form_kozultace_zdarma #message + span.error");

    formValidation(freeConsultationEmail, freeConsultationEmailError, freeConsultationMessage, freeConsultationMessageError, freeConsultationForm);
  }

  //footer form

  const footerForm = document.getElementById("contact_form");

  if(footerForm) {
    const footerContactEmail = document.querySelector("#contact_form #email");
    const footerContactEmailError = document.querySelector("#contact_form #email + span.error")
    const footerContactMessage = document.querySelector("#contact_form #message");
    const footerContactMessageError = document.querySelector("#contact_form #message + span.error");

    formValidation(footerContactEmail, footerContactEmailError, footerContactMessage, footerContactMessageError, footerForm);
  }

  //contact form 2 validation

  const contactForm2 = document.getElementById("contact_form2");

  if(contactForm2) {
    const contactEmail = document.querySelector("#contact_form2 #email");
    const contactEmailError = document.querySelector("#contact_form2 #email + span.error")
    const contactMessage = document.querySelector("#contact_form2 #message");
    const contactMessageError = document.querySelector("#contact_form2 #message + span.error");

    formValidation(contactEmail, contactEmailError, contactMessage, contactMessageError, contactForm2);
  }

  //free phone consultation validation

  const freePhoneConsultationForm = document.getElementById("contact_form_tel_kozultace_zdarma");
  if(freePhoneConsultationForm) {
    const phoneConsultationEmail = document.querySelector("#contact_form_tel_kozultace_zdarma #phone");
    const phoneConsultationEmailError = document.querySelector("#contact_form_tel_kozultace_zdarma #phone + span.error")

    function showPhoneError() {
      if(phoneConsultationEmail.validity.valueMissing) {
        phoneConsultationEmailError.textContent = 'Prosím, zadejte telefon';
      } else if(phoneConsultationEmail.validity.patternMismatch) {
        phoneConsultationEmailError.textContent = 'Zadali jste špatně telefon';
      }
    }

    phoneConsultationEmail.addEventListener('input', function() {
      if(phoneConsultationEmail.validity.valid) {
        phoneConsultationEmailError.innerHTML = '';
        phoneConsultationEmail.classList.remove('error');
        phoneConsultationEmailError.classList.remove('show');
      }
      else {
        phoneConsultationEmail.classList.add('error');
        phoneConsultationEmailError.classList.add('show');
        showPhoneError();
      }
    });
    freePhoneConsultationForm.addEventListener('submit', function(evnt) {
      if (!phoneConsultationEmail.validity.valid) {
        showPhoneError();
        evnt.preventDefault();

        phoneConsultationEmail.classList.add('error');
        phoneConsultationEmailError.classList.add('show');
        }
    });

  }

  munuOpenEl.addEventListener("click", function openMenu(evnt) {
    evnt.preventDefault();
    const menuCloseElement = document.querySelector("#menu-close");
    const overlayEl = document.getElementById("overlay");
    bodyEl.style.overflow = "hidden";
    overlayEl.classList.value = 'fade-in';
    menuEl.classList.value = 'fade-in';
    overlayEl.style.display = "block";
    menuEl.style.display = "block";

    [overlayEl, menuCloseElement].forEach(function(el) {
      el.addEventListener('click', function closeMenu() {
        overlayEl.classList.value ='fade-out';
         menuEl.classList.value ='fade-out';
         bodyEl.style.overflow = "auto";
         setTimeout(function () {
          overlayEl.style.display ='none';
           menuEl.style.display ='none';
          }, 400
         )
      })
    });
  });

  const educationalContentBody = document.querySelector(".educational_content");
  var developmentPage;

  if(educationalContentBody) {
      const imageCover = document.querySelector(".img-cover");
      developmentPage = document.querySelector(".development");
      if (developmentPage) {
        developmentPage.addEventListener("scroll", function(evnt) {
        const dotsArray = Array.from(document.querySelectorAll(".nav-dots li"));
        const currentPageIndex = Math.ceil(developmentPage.scrollTop/screen.height);
        if (developmentPage.scrollTop > screen.height * 0.65) {
            dotsArray.forEach(function(dot, indx) {
              indx === currentPageIndex ? dot.classList.add("current") : dot.classList.remove("current");
            }) 
            imageCover.style.background = "rgba(255, 255, 255, 0.91)";
            educationalContentBody.style.color = "rgb(65, 65, 65)";
        } else {
            imageCover.style.background = "rgba(72, 81, 90, 0.8)";
            educationalContentBody.style.color = "white";
            const firstPageIndex = 0;
            dotsArray.forEach(function(dot, indx) {
              indx === firstPageIndex ? dot.classList.add("current") : dot.classList.remove("current");
            }) 
        }
    })} else if (document.querySelector(".developers-page") && window.matchMedia('(min-width: 768px)').matches) {
      const roleItems = document.querySelectorAll('#content-wrap .role-item');
      roleItems.forEach(function(item, curIndex) {
        item.addEventListener('click', function(e) {
          for (var i = 0; i < roleItems.length; i += 1) {
            const description = roleItems[i].querySelector('.role-description');
            if (i === curIndex) {
              const currentItem = roleItems[i];
              currentItem.classList.add("active");
              if (description) {
                description.classList.add("active");
                description.querySelector(".fa-times").addEventListener("click", function(e){
                  e.stopPropagation();
                  currentItem.querySelector(".role-description").classList.remove("active");
                });
              }
            } else {
              roleItems[i].classList.remove("active");
              if (description) {
                description.classList.remove("active");
              }
            }
          }
        })
      })
      } else { window.addEventListener("scroll", function(evnt) {
          if (window.scrollY > screen.height *0.65) {
              imageCover.style.background = "rgba(255, 255, 255, 0.91)";
              educationalContentBody.style.color = "rgb(65, 65, 65)";
          } else {
              imageCover.style.background = "rgba(72, 81, 90, 0.8)";
              educationalContentBody.style.color = "white";
          }
      })
    }
  }

const scrollLink = document.querySelectorAll(".scroll-link");
  if(scrollLink.length) {
    scrollLink.forEach(function(link) {
      link.addEventListener("click", function(evnt) {
        evnt.preventDefault();
        const href = this.getAttribute("href");
        const viewportOffset = document.querySelector(href).getBoundingClientRect();
        const PADDING = 40;
        const offsetTop = viewportOffset.top + window.pageYOffset - PADDING;
        if(developmentPage) {
          document.querySelector(href).scrollIntoView({behavior: 'smooth'});} else {
            scrollTo({
              top: offsetTop,
              behavior: 'smooth'
            });
          }
      })
    });
  }
});